/*! For license information please see 931.7cdd528bd5f8e9ed4ea0.bundle-prod.js.LICENSE.txt */
"use strict";(self.webpackChunkai_workout_assistant=self.webpackChunkai_workout_assistant||[]).push([[931],{44246:(e,n,a)=>{a.d(n,{W:()=>r});var t=a(88478),s=a(28163);const r={kernelName:t.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{a:r,b:o}=n,{transposeA:p,transposeB:i}=t;return(0,s.r)({a:r,b:o,transposeA:p,transposeB:i,backend:a})}}},28163:(e,n,a)=>{a.d(n,{R:()=>c,r:()=>l});var t=a(88478),s=a(15367),r=a(53100),o=a(52038),p=a(24622),i=a(63255),d=a(72207);const c=1e3;function l({a:e,b:n,transposeA:a,transposeB:l,backend:u,bias:h=null,preluActivationWeights:m=null,leakyreluAlpha:b=0,activation:k=null}){const f=e.shape.length,g=n.shape.length,x=a?e.shape[f-2]:e.shape[f-1],N=l?n.shape[g-1]:n.shape[g-2],I=a?e.shape[f-1]:e.shape[f-2],v=l?n.shape[g-2]:n.shape[g-1],w=e.shape.slice(0,-2),S=n.shape.slice(0,-2),y=t.D5U.sizeFromShape(w),W=t.D5U.sizeFromShape(S),T=t.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),n.shape.slice(0,-2)).concat([I,v]);t.D5U.assert(x===N,(()=>`Error in matMul: inner shapes (${x}) and (${N}) of Tensors with shapes ${e.shape} and ${n.shape} and transposeA=${a} and transposeB=${l} must match.`));const A=a?[y,x,I]:[y,I,x],F=l?[W,v,N]:[W,N,v],D=(0,p.X)({inputs:{x:e},backend:u,attrs:{shape:A}}),P=(0,p.X)({inputs:{x:n},backend:u,attrs:{shape:F}}),E=[D,P],O=Math.max(y,W),L=a?D.shape[1]:D.shape[2],G=null!=h,C=null!=m,B="leakyrelu"===k,R=null!=k?(0,s.g8)(k,!0):null;let U;if((1===I||1===v)&&L>c&&!1===(G||C||B||null!=R)){let e=D,n=P;a&&(e=(0,d.p)({inputs:{x:D},backend:u,attrs:{perm:[0,2,1]}}),E.push(e)),l&&(n=(0,d.p)({inputs:{x:P},backend:u,attrs:{perm:[0,2,1]}}),E.push(n));const t=1===v;let s=e;1!==v&&(s=(0,p.X)({inputs:{x:e},backend:u,attrs:{shape:[O,L,1]}}),E.push(s));const r=1===v?2:1;let c=n;t&&(c=(0,p.X)({inputs:{x:n},backend:u,attrs:{shape:[O,1,L]}}),E.push(c));const h=(0,o.J)({inputs:{a:s,b:c},backend:u});U=(0,i.S)({inputs:{x:h},backend:u,attrs:{axis:r,keepDims:!0}}),E.push(h)}else{const s=(0,t.x8V)(e.dtype,n.dtype),o=new r.N(A,F,[O,I,v],a,l,G,R,C,B),p=[D,P];if(null!=h&&p.push(h),C&&p.push(m),B){const e=u.makeTensorInfo([],"float32",t.D5U.createScalarValue(b,"float32"));p.push(e),E.push(e)}U=u.runWebGLProgram(o,p,s)}const z=(0,p.X)({inputs:{x:U},backend:u,attrs:{shape:T}});E.push(U);for(const e of E)u.disposeIntermediateTensorInfo(e);return z}},7632:(e,n,a)=>{a.d(n,{C:()=>o});var t=a(88478),s=a(29476),r=a(87373);const o={kernelName:t.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:n,attrs:a})=>{const{x:o,mean:p,variance:i,offset:d,scale:c}=e;t.D5U.assert(p.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),t.D5U.assert(null==d||p.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),t.D5U.assert(null==c||p.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[o,p,i];let h=null;null!=d&&(h=d.shape,u.push(d));let m=null;null!=c&&(m=c.shape,u.push(c));const b=(0,t.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new r.x(o.shape,p.shape,i.shape,h,m,l):new s.w(o.shape,p.shape,i.shape,h,m,l);return n.runWebGLProgram(b,u,u[0].dtype)}}},21346:(e,n,a)=>{a.d(n,{g:()=>p});var t=a(88478),s=a(24622),r=a(10623),o=a(72207);const p={kernelName:t.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a,attrs:p}=e,{x:i}=n,{blockShape:d,crops:c}=p;t.D5U.assert(i.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=d.reduce(((e,n)=>e*n)),u=t.Wap.getReshaped(i.shape,d,l),h=t.Wap.getPermuted(u.length,d.length),m=t.Wap.getReshapedPermuted(i.shape,d,l),b=t.Wap.getSliceBeginCoords(c,d.length),k=t.Wap.getSliceSize(m,c,d.length),f=[],g=(0,s.X)({inputs:{x:i},backend:a,attrs:{shape:u}}),x=(0,o.p)({inputs:{x:g},backend:a,attrs:{perm:h}}),N=(0,s.X)({inputs:{x},backend:a,attrs:{shape:m}}),I=(0,r.t)({inputs:{x:N},backend:a,attrs:{begin:b,size:k}});return f.push(g),f.push(x),f.push(N),f.forEach((e=>a.disposeIntermediateTensorInfo(e))),I}}},10802:(e,n,a)=>{a.d(n,{e:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{x:r,weights:o}=n,{size:p}=t,i=a.readSync(r.dataId),d=a.readSync(o.dataId),c=(0,s.qO)(i,d,o.dtype,o.shape,p);return a.makeTensorInfo([p],o.dtype,c)}}},37833:(e,n,a)=>{a.d(n,{u:()=>s});var t=a(88478);const s={kernelName:t.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{s0:s,s1:r}=n,o=a.readSync(s.dataId),p=a.readSync(r.dataId),i=t.Wap.assertAndGetBroadcastShape(Array.from(o),Array.from(p));return a.makeTensorInfo([i.length],"int32",Int32Array.from(i))}}},58446:(e,n,a)=>{a.d(n,{M:()=>c});var t=a(88478),s=a(64272),r=a(56515),o=a(18955),p=a(24299),i=a(50852),d=a(22842);const c={kernelName:t.RFZ,backendName:"webgl",kernelFunc:function e(n){const{inputs:a,backend:c,attrs:l}=n,{x:u}=a,{dtype:h}=l;if("complex64"===h){if("complex64"===u.dtype)return(0,o.y)({inputs:{x:u},backend:c});const n=t.lls(u.shape),a=e({inputs:{x:u},backend:c,attrs:{dtype:"float32"}}),s=(0,r.P)({inputs:{real:a,imag:n},backend:c});return n.dispose(),c.disposeIntermediateTensorInfo(a),s}if("complex64"===u.dtype){const n=(0,i.k)({inputs:{input:u},backend:c}),a=e({inputs:{x:n},backend:c,attrs:{dtype:h}});return c.disposeIntermediateTensorInfo(n),a}if(!t.D5U.hasEncodingLoss(u.dtype,h)){const e=(0,o.y)({inputs:{x:u},backend:c});return{dataId:e.dataId,shape:e.shape,dtype:h}}if(c.shouldExecuteOnCPU([u])){const e=c.texData.get(u.dataId).values,[n,a,t]=(0,s.cm)(e,u.shape,u.dtype,h);return c.makeTensorInfo(n,a,t)}if("int32"===h)return(0,d.e)(u,c);if("bool"===h){const e=c.makeTensorInfo([],"bool",t.D5U.getTypedArrayFromDType("bool",1)),n={a:u,b:e},a=(0,p.Q)({inputs:n,backend:c});return c.disposeIntermediateTensorInfo(e),a}throw new Error(`Error in Cast: failed to cast ${u.dtype} to ${h}`)}}},68291:(e,n,a)=>{a.d(n,{y:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o="return ceil(x);",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:r.pk}),i={kernelName:t.gJX,backendName:"webgl",kernelFunc:p}},54712:(e,n,a)=>{a.d(n,{w:()=>o});var t=a(88478),s=a(90150),r=a(96521);const o={kernelName:t.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{x:p}=n,{clipValueMin:i,clipValueMax:d}=o;let c;c=(0,t.OBj)().getBool("WEBGL_PACK_CLIP")?new r.V(p.shape):new s.v(p.shape);const l=[[i],[d]];return a.runWebGLProgram(c,[p],p.dtype,l)}}},56515:(e,n,a)=>{a.d(n,{P:()=>r,z:()=>o});var t=a(88478),s=a(18955);function r(e){const{inputs:n,backend:a}=e,{real:t,imag:r}=n,o=a.makeTensorInfo(t.shape,"complex64"),p=a.texData.get(o.dataId),i=(0,s.y)({inputs:{x:t},backend:a}),d=(0,s.y)({inputs:{x:r},backend:a});return p.complexTensorInfos={real:i,imag:d},o}const o={kernelName:t.Zz9,backendName:"webgl",kernelFunc:r}},55876:(e,n,a)=>{a.d(n,{s:()=>o});var t=a(88478),s=a(82314);function r(e,n){return{dataId:n.dataId,dtype:n.dtype,shape:e.shape}}const o={kernelName:t.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{x:t}=n,o=a.texData.get(t.dataId),p=new s.V(t.shape),i=[r(t,o.complexTensorInfos.real),r(t,o.complexTensorInfos.imag)];return a.runWebGLProgram(p,i,i[0].dtype)}}},10398:(e,n,a)=>{a.d(n,{z:()=>b,X:()=>k});var t=a(88478),s=a(47494),r=a(47625),o=a(64272),p=a(84518),i=a(29365),d=a(56515),c=a(55145),l=a(50852),u=a(24622);function h(e,n,a){const m=e[0].dtype;if("complex64"===m){const t=e.map((e=>(0,l.k)({inputs:{input:e},backend:a}))),s=e.map((e=>(0,c.a)({inputs:{input:e},backend:a}))),r=h(t,n,a),o=h(s,n,a),p=(0,d.P)({inputs:{real:r,imag:o},backend:a});return t.forEach((e=>a.disposeIntermediateTensorInfo(e))),s.forEach((e=>a.disposeIntermediateTensorInfo(e))),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),p}let b=a.shouldExecuteOnCPU(e);if("string"===m&&(b=!0),b){const s=e.map((e=>{const s=[-1,t.D5U.sizeFromShape(e.shape.slice(n))];return(0,u.X)({inputs:{x:e},backend:a,attrs:{shape:s}})})),r=s.map((e=>({vals:a.readSync(e.dataId),shape:e.shape}))),p=t.Wap.computeOutShape(s.map((e=>e.shape)),1),i=1===s[0].shape[0],d=(0,o.n7)(r,p,m,i),c=t.Wap.computeOutShape(e.map((e=>e.shape)),n),l=a.makeTensorInfo(c,m,d);return s.forEach((e=>a.disposeIntermediateTensorInfo(e))),l}const k=e.filter((e=>t.D5U.sizeFromShape(e.shape)>0)),f=(0,t.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&k[0].shape.length>1;if(1===k.length){const n=f?new p.l(e[0].shape,p.bl):new i.cc(e[0].shape,p.bl);return a.runWebGLProgram(n,e,m)}const g=(0,t.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(k.length>g){const e=[];for(let t=0;t<k.length;t+=g){const s=k.slice(t,t+g);e.push(h(s,n,a))}const t=h(e,n,a);for(const n of e)a.disposeIntermediateTensorInfo(n);return t}if(f){const e=new r.R(k.map((e=>e.shape)),n);return a.runWebGLProgram(e,k,m)}const{tensors2D:x,outShape:N}=function(e,n,a){const s=t.Wap.computeOutShape(e.map((e=>e.shape)),n);return{tensors2D:e.map((e=>(0,u.X)({inputs:{x:e},attrs:{shape:[-1,t.D5U.sizeFromShape(e.shape.slice(n))]},backend:a}))),outShape:s}}(k,n,a),I=new s.Z(x.map((e=>e.shape))),v=a.runWebGLProgram(I,x,m);x.forEach((e=>a.disposeIntermediateTensorInfo(e)));const w=(0,u.X)({inputs:{x:v},attrs:{shape:N},backend:a});return a.disposeIntermediateTensorInfo(v),w}var m=a(18955);function b(e){const{inputs:n,backend:a,attrs:s}=e,{axis:r}=s,o=t.D5U.parseAxisParam(r,n[0].shape)[0],p=n.map((e=>e.shape));t.Wap.assertParamsConsistent(p,o);const i=t.Wap.computeOutShape(n.map((e=>e.shape)),o);if(0===t.D5U.sizeFromShape(i))return a.makeTensorInfo(i,n[0].dtype,[]);const d=n.filter((e=>t.D5U.sizeFromShape(e.shape)>0));return 1===d.length?(0,m.y)({inputs:{x:d[0]},backend:a}):h(d,o,a)}const k={kernelName:t.Eh3,backendName:"webgl",kernelFunc:b}},20946:(e,n,a)=>{a.d(n,{o:()=>i});var t=a(88478),s=a(18954),r=a(92734),o=a(8328),p=a(24622);const i={kernelName:t.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:i}=e,{x:d,filter:c}=n,{strides:l,pad:u,dataFormat:h,dilations:m,dimRoundingMode:b}=i,k=t.Wap.convertConv2DDataFormat(h),f=t.Wap.computeConv2DInfo(d.shape,c.shape,l,m,u,b,!1,k);let g;if(1!==f.filterHeight||1!==f.filterWidth||1!==f.dilationHeight||1!==f.dilationWidth||1!==f.strideHeight||1!==f.strideWidth||"SAME"!==f.padInfo.type&&"VALID"!==f.padInfo.type)if(f.strideWidth<=2&&"channelsLast"===k&&(0,t.OBj)().getBool("WEBGL_EXP_CONV")){const e=new r.i(f),n=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];g=a.runWebGLProgram(e,[d,c],"float32",n)}else if((0,t.OBj)().getBool("WEBGL_CONV_IM2COL"))g=(0,o.Y)({x:d,filter:c,convInfo:f,backend:a});else{const e=new s.I(f);g=a.runWebGLProgram(e,[d,c],"float32")}else g=(0,o.n)({x:d,filter:c,convInfo:f,backend:a});const x=(0,p.X)({inputs:{x:g},backend:a,attrs:{shape:f.outShape}});return a.disposeIntermediateTensorInfo(g),x}}},72728:(e,n,a)=>{a.d(n,{d:()=>r});var t=a(88478),s=a(90301);const r={kernelName:t.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{x:o,dy:p}=n,{strides:i,pad:d,dataFormat:c,dimRoundingMode:l,filterShape:u}=r,h=t.Wap.convertConv2DDataFormat(c),m=t.Wap.computeConv2DInfo(o.shape,u,i,1,d,l,!1,h),b=new s.Ng(m);return a.runWebGLProgram(b,[o,p],"float32")}}},52596:(e,n,a)=>{a.d(n,{g:()=>r});var t=a(88478),s=a(90301);const r={kernelName:t.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{dy:o,filter:p}=n,{inputShape:i,strides:d,pad:c,dataFormat:l,dimRoundingMode:u}=r,h=t.Wap.convertConv2DDataFormat(l),m=t.Wap.computeConv2DInfo(i,p.shape,d,1,c,u,!1,h),b=new s.P2(m);return a.runWebGLProgram(b,[o,p],"float32")}}},8328:(e,n,a)=>{a.d(n,{Y:()=>h,n:()=>u});var t=a(88478),s=a(77129),r=a(15367),o=a(53100),p=a(91906),i=a(28163),d=a(18955),c=a(24622);function l(e,n){const a=e.length;return a>=3?n?[...e.slice(0,-3),e[a-3]*e[a-2],e[a-1]]:[...e.slice(0,-3),e[a-3],e[a-2]*e[a-1]]:!n&&1===a&&e[0]>1?[e[0],1]:null}function u({x:e,filter:n,convInfo:a,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:h=null}){const m=e.shape,b=s.texData.get(e.dataId),k=a.inChannels,f=m[0]*m[1]*m[2],g=a.outChannels,x="channelsLast"===a.dataFormat;let N;const I=[];if(null!=o){const e=l(o.shape,x);null!=e&&(o=(0,c.X)({inputs:{x:o},backend:s,attrs:{shape:e}}),I.push(o))}if(null!=r){const e=l(r.shape,x);null!=e&&(r=(0,c.X)({inputs:{x:r},backend:s,attrs:{shape:e}}),I.push(r))}if((1!==f&&1!==g||!(k>i.R))&&b.isPacked&&x&&null!=b.texture&&m[2]%2!=0&&t.D5U.arraysEqual(b.shape.slice(-3),m.slice(-3))){const l=m[0]*m[1]*(m[2]+1),k={dataId:e.dataId,shape:[1,l,a.inChannels],dtype:e.dtype},f=b.shape;b.shape=b.shape.slice(),b.shape[b.shape.length-2]++,t.D5U.assert(p.oT(b.shape,k.shape),(()=>`packed reshape ${b.shape} to ${k.shape} isn't free`));const g=(0,c.X)({inputs:{x:n},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}});I.push(g);const x=(0,i.r)({a:k,b:g,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:h,preluActivationWeights:o,leakyreluAlpha:u}),v=s.texData.get(x.dataId);t.D5U.assert(v.isPacked,(()=>"batchMatMul result is expected to be packed")),b.shape=f,v.shape=a.outShape,N=(0,d.y)({inputs:{x},backend:s}),N.shape=a.outShape,I.push(x)}else{const t=a.outHeight*a.outWidth,p=(0,c.X)({inputs:{x:e},backend:s,attrs:{shape:x?[a.batchSize,t,a.inChannels]:[a.batchSize,a.inChannels,t]}}),d=(0,c.X)({inputs:{x:n},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}}),l=(0,i.r)({a:x?p:d,b:x?d:p,transposeA:!x,transposeB:!1,backend:s,bias:r,activation:h,preluActivationWeights:o,leakyreluAlpha:u});N=(0,c.X)({inputs:{x:l},backend:s,attrs:{shape:a.outShape}}),I.push(p),I.push(d),I.push(l)}for(const e of I)s.disposeIntermediateTensorInfo(e);return N}function h({x:e,filter:n,convInfo:a,backend:p,bias:i=null,preluActivationWeights:d=null,leakyreluAlpha:u=0,activation:h=null}){const{filterWidth:m,filterHeight:b,inChannels:k,outWidth:f,outHeight:g,dataFormat:x}=a,N="channelsLast"===x,I=m*b*k,v=g*f,w=[a.batchSize,I,v],S=[];if(null!=d){const e=l(d.shape,N);null!=e&&(d=(0,c.X)({inputs:{x:d},backend:p,attrs:{shape:e}}),S.push(d))}if(null!=i){const e=l(i.shape,N);null!=e&&(i=(0,c.X)({inputs:{x:i},backend:p,attrs:{shape:e}}),S.push(i))}const y=(0,c.X)({inputs:{x:n},backend:p,attrs:{shape:[1,I,t.D5U.sizeFromShape(n.shape)/I]}});S.push(y);const W=new s.l(w,a),T=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],A=p.runWebGLProgram(W,[e],"float32",T),F=(0,c.X)({inputs:{x:A},backend:p,attrs:{shape:w}});S.push(A),S.push(F);const D=null!=i,P=null!=d,E="leakyrelu"===h,O=h?(0,r.g8)(h,!0):null,L=new o.N(N?F.shape:y.shape,N?y.shape:F.shape,N?[a.batchSize,v,a.outChannels]:[a.batchSize,a.outChannels,v],!0,!1,D,O,P,E),G=N?[F,y]:[y,F];if(i&&G.push(i),P&&G.push(d),E){const e=p.makeTensorInfo([],"float32",t.D5U.createScalarValue(u,"float32"));G.push(e),S.push(e)}const C=p.runWebGLProgram(L,G,"float32"),B=(0,c.X)({inputs:{x:C},backend:p,attrs:{shape:a.outShape}});S.push(C);for(const e of S)p.disposeIntermediateTensorInfo(e);return B}},73834:(e,n,a)=>{a.d(n,{L:()=>r});var t=a(88478),s=a(18954);const r={kernelName:t.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{x:o,filter:p}=n,{strides:i,pad:d,dilations:c}=r,l=t.Wap.computeConv3DInfo(o.shape,p.shape,i,c,d),u=new s.S(l);return a.runWebGLProgram(u,[o,p],"float32")}}},36027:(e,n,a)=>{a.d(n,{$:()=>r});var t=a(88478),s=a(90301);const r={kernelName:t.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{x:o,dy:p}=n,{strides:i,pad:d,filterShape:c}=r,l=t.Wap.computeConv3DInfo(o.shape,c,i,1,d),u=new s.FF(l);return a.runWebGLProgram(u,[o,p],"float32")}}},80159:(e,n,a)=>{a.d(n,{i:()=>r});var t=a(88478),s=a(90301);const r={kernelName:t.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{dy:o,filter:p}=n,{pad:i,strides:d,inputShape:c}=r,l=t.Wap.computeConv3DInfo(c,p.shape,d,1,i),u=new s.cc(l);return a.runWebGLProgram(u,[o,p],"float32")}}},40526:(e,n,a)=>{a.d(n,{D:()=>p});var t=a(88478),s=a(15367);const r=s.E6+"\n  return cos(x);\n",o=(0,s.AJ)({opSnippet:r}),p={kernelName:t.mc4,backendName:"webgl",kernelFunc:o}},19354:(e,n,a)=>{a.d(n,{q:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),r={kernelName:t.TR1,backendName:"webgl",kernelFunc:s}},2920:(e,n,a)=>{a.d(n,{L:()=>r});var t=a(88478),s=a(65120);const r={kernelName:t.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a,attrs:t}=e,{image:r,boxes:o,boxInd:p}=n,{cropSize:i,method:d,extrapolationValue:c}=t,l=new s.A(r.shape,o.shape,i,d,c);return a.runWebGLProgram(l,[r,o,p],"float32")}}},31786:(e,n,a)=>{a.d(n,{o:()=>p});var t=a(88478),s=a(30330),r=a(18955),o=a(72207);function p(e,n,a,p,i,d){const c=n.shape.length,l=t.Wap.getAxesPermutation([p],c);let u=n;null!=l&&(u=(0,o.p)({inputs:{x:n},backend:a,attrs:{perm:l}}));const h=t.Wap.getInnerMostAxes(1,c)[0];if(h!==c-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${n.shape.length-1} but got axis=${p}`);const m=u.shape[h];let b=(0,r.y)({inputs:{x:u},backend:a});for(let n=0;n<=Math.ceil(Math.log2(m))-1;n++){const t=new s.Z(e,u.shape,!1,d),r=[[n]],o=b;b=a.runWebGLProgram(t,[b],b.dtype,r),a.disposeIntermediateTensorInfo(o)}if(i){const n=new s.Z(e,u.shape,i,d),t=b;b=a.runWebGLProgram(n,[b],b.dtype),a.disposeIntermediateTensorInfo(t)}if(null!=l){const e=t.Wap.getUndoAxesPermutation(l),n=(0,o.p)({inputs:{x:b},backend:a,attrs:{perm:e}});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(u),n}return b}},41333:(e,n,a)=>{a.d(n,{c:()=>o});var t=a(88478),s=a(30330),r=a(31786);const o={kernelName:t.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{x:o}=n,{axis:p,exclusive:i,reverse:d}=t;return(0,r.o)(s.Q.Prod,o,a,p,i,d)}}},19749:(e,n,a)=>{a.d(n,{z:()=>o});var t=a(88478),s=a(30330),r=a(31786);const o={kernelName:t.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{x:o}=n,{axis:p,exclusive:i,reverse:d}=t;return(0,r.o)(s.Q.Sum,o,a,p,i,d)}}},48610:(e,n,a)=>{a.d(n,{R:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{x:r,weights:o}=n,{size:p,binaryOutput:i}=t;if(1===r.shape.length){const e=a.readSync(r.dataId),n=a.readSync(o.dataId),t=(0,s.qO)(e,n,o.dtype,o.shape,p);return a.makeTensorInfo([p],o.dtype,t)}if(2===r.shape.length){const e=a.bufferSync(r),n=a.bufferSync(o),t=(0,s.cx)(e,n,p,i);return a.makeTensorInfo(t.shape,o.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}}},12650:(e,n,a)=>{a.d(n,{d:()=>r});var t=a(88478),s=a(87033);const r={kernelName:t.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{x:r}=n,{blockSize:o,dataFormat:p}=t,i=r.shape[0],d=("NHWC"===p?r.shape[1]:r.shape[2])*o,c=("NHWC"===p?r.shape[2]:r.shape[3])*o,l=("NHWC"===p?r.shape[3]:r.shape[1])/(o*o),u="NHWC"===p?[i,d,c,l]:[i,l,d,c],h=new s.h(u,o,p);return a.runWebGLProgram(h,[r],r.dtype)}}},95710:(e,n,a)=>{a.d(n,{X:()=>o});var t=a(88478),s=a(64364),r=a(31177);const o={kernelName:t.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{x:p,filter:i}=n,{strides:d,pad:c,dilations:l,dimRoundingMode:u}=o;let h=l;null==h&&(h=[1,1]),t.D5U.assert(t.Wap.eitherStridesOrDilationsAreOne(d,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${d} and dilations '${h}'`));const m=t.Wap.computeConv2DInfo(p.shape,i.shape,d,h,c,u,!0);let b;b=(0,t.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1?new r.f(m):new s.J(m);const k=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return a.runWebGLProgram(b,[p,i],"float32",k)}}},47262:(e,n,a)=>{a.d(n,{v:()=>r});var t=a(88478),s=a(37428);const r={kernelName:t.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{x:o,dy:p}=n,{strides:i,dilations:d,pad:c,dimRoundingMode:l,filterShape:u}=r,h=t.Wap.computeConv2DInfo(o.shape,u,i,d,c,l,!0),m=new s.u(h);return a.runWebGLProgram(m,[o,p],"float32")}}},22145:(e,n,a)=>{a.d(n,{G:()=>r});var t=a(88478),s=a(37428);const r={kernelName:t.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{dy:o,filter:p}=n,{strides:i,dilations:d,pad:c,dimRoundingMode:l,inputShape:u}=r,h=t.Wap.computeConv2DInfo(u,p.shape,i,d,c,l,!0),m=new s.g(h);return a.runWebGLProgram(m,[o,p],"float32")}}},64931:(e,n,a)=>{a.d(n,{y:()=>o});var t=a(88478),s=a(76473),r=a(24622);const o={kernelName:t.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{x:o}=n,p=[...o.shape,...o.shape],i=t.D5U.sizeFromShape(o.shape),d=(0,r.X)({inputs:{x:o},backend:a,attrs:{shape:[i]}}),c=new s.L(i),l=a.runWebGLProgram(c,[d],d.dtype),u=(0,r.X)({inputs:{x:l},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(l),u}}},73296:(e,n,a)=>{a.d(n,{T:()=>o});var t=a(88478),s=a(93008),r=a(24622);const o={kernelName:t.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{x:p,filter:i}=n,{strides:d,pad:c,dilations:l}=o,u=t.Wap.computeDilation2DInfo(p.shape,i.shape,d,c,"NHWC",l);let h;const m=new s.H(u);h=a.runWebGLProgram(m,[p,i],"float32");const b=(0,r.X)({inputs:{x:h},backend:a,attrs:{shape:u.outShape}});return a.disposeIntermediateTensorInfo(h),b}}},39639:(e,n,a)=>{a.d(n,{G:()=>i});var t=a(88478),s=a(52038),r=a(24622),o=a(63255),p=a(72207);const i={kernelName:t.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:i}=e,{equation:d}=i,c=n,{allDims:l,summedDims:u,idDims:h}=t.Wap.decodeEinsumEquation(d,c.length);t.Wap.checkEinsumDimSizes(l.length,h,c);const{path:m,steps:b}=t.Wap.getEinsumComputePath(u,h),k=b.length;let f=null,g=l.length;const x=[];for(let e=0;e<k;++e){for(const n of b[e]){const{permutationIndices:e,expandDims:o}=t.Wap.getEinsumPermutation(g,h[n]);let i;t.Wap.isIdentityPermutation(e)?i=c[n]:(i=(0,p.p)({inputs:{x:c[n]},backend:a,attrs:{perm:e}}),x.push(i));const d=i.shape.slice();for(let e=0;e<o.length;++e)d.splice(o[e],0,1);t.D5U.arraysEqual(i.shape,d)||(i=(0,r.X)({inputs:{x:i},backend:a,attrs:{shape:d}}),x.push(i)),null===f?f=i:(f=(0,s.J)({inputs:{a:i,b:f},backend:a}),x.push(f))}e<k-1&&(m[e]>=0&&(f=(0,o.S)({inputs:{x:f},backend:a,attrs:{axis:m[e]-(l.length-g),keepDims:!1}}),x.push(f)),g--)}for(const e of x)e!==f&&a.disposeIntermediateTensorInfo(e);return f}}},76494:(e,n,a)=>{a.d(n,{$:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),r={kernelName:t.SX0,backendName:"webgl",kernelFunc:s}},34680:(e,n,a)=>{a.d(n,{q:()=>o});var t=a(88478),s=a(84039),r=a(14488);const o={kernelName:t.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a}=e,{dy:o,y:p}=n,i=(0,t.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new r.E2("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",o.shape,p.shape):new s.t6("return (b >= 1.0) ? a : a * (b + 1.0);",o.shape,p.shape);return a.runWebGLProgram(i,[o,p],o.dtype)}}},24815:(e,n,a)=>{a.d(n,{K:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.js)({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:r.gv}),p={kernelName:t.hdR,backendName:"webgl",kernelFunc:o}},70942:(e,n,a)=>{a.d(n,{F:()=>p});var t=a(88478),s=a(15367);const r=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${t.Wap.ERF_P};\n  float a1 = ${t.Wap.ERF_A1};\n  float a2 = ${t.Wap.ERF_A2};\n  float a3 = ${t.Wap.ERF_A3};\n  float a4 = ${t.Wap.ERF_A4};\n  float a5 = ${t.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,o=(0,s.AJ)({opSnippet:r}),p={kernelName:t.Omj,backendName:"webgl",kernelFunc:o}},43041:(e,n,a)=>{a.d(n,{Qq:()=>p,SX:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o=s.E6+"\n  return exp(x);\n",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:r.aX,dtype:"float32"}),i={kernelName:t.NEP,backendName:"webgl",kernelFunc:p}},66623:(e,n,a)=>{a.d(n,{d:()=>r,p:()=>o});var t=a(88478),s=a(24622);function r(e){const{inputs:n,attrs:a,backend:r}=e,{dim:o}=a,{input:p}=n,i=p.shape.length,d=p.shape.slice();let c=o;return o<0&&(t.D5U.assert(-(i+1)<=o,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),c=i+o+1),d.splice(c,0,1),(0,s.X)({inputs:{x:p},backend:r,attrs:{shape:d}})}const o={kernelName:t.YFo,backendName:"webgl",kernelFunc:r}},98465:(e,n,a)=>{a.d(n,{V:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o="return exp(x) - 1.0;",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:r.tx}),i={kernelName:t.Y0y,backendName:"webgl",kernelFunc:p}},38993:(e,n,a)=>{a.d(n,{r:()=>r});var t=a(88478),s=a(43831);const r={kernelName:t.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{input:t}=n;return(0,s.m)(t,!1,a)}}},43831:(e,n,a)=>{a.d(n,{m:()=>p});var t=a(88478),s=a(90615),r=a(56515),o=a(24622);function p(e,n,a){const p=a.texData.get(e.dataId),i=t.D5U.sizeFromShape(e.shape),d=e.shape[e.shape.length-1],c=i/d,l=(0,o.X)({inputs:{x:e},backend:a,attrs:{shape:[c,d]}}),u=l.shape,h=new s.O("real",u,n),m=new s.O("imag",u,n),b=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:u},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:u}],k=a.runWebGLProgram(h,b,"float32"),f=a.runWebGLProgram(m,b,"float32"),g=(0,r.P)({inputs:{real:k,imag:f},backend:a});a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(f);const x=(0,o.X)({inputs:{x:g},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(g),x}},13062:(e,n,a)=>{a.d(n,{h:()=>r,v:()=>o});var t=a(88478),s=a(67137);function r(e){const{backend:n,attrs:a}=e,{shape:r,value:o}=a;let{dtype:p}=a;if(p=p||t.D5U.inferDtype(o),"string"===p){const e=t.D5U.getArrayFromDType(p,t.D5U.sizeFromShape(r));return e.fill(o),n.makeTensorInfo(r,p,e)}{const e=new s.o(r,o),a=[[o]];return n.runWebGLProgram(e,[],p,a)}}const o={kernelName:t.deh,backendName:"webgl",kernelFunc:r}},40885:(e,n,a)=>{a.d(n,{v:()=>r});var t=a(88478),s=a(67079);const r={kernelName:t.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:n})=>{const{image:a}=e,t=n,r=new s.i(a.shape);return t.runWebGLProgram(r,[a],a.dtype)}}},73101:(e,n,a)=>{a.d(n,{A:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o="return floor(x);",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:r.MZ}),i={kernelName:t.OR,backendName:"webgl",kernelFunc:p}},56997:(e,n,a)=>{a.d(n,{E:()=>r});var t=a(88478);const s=(0,a(15367).js)({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),r={kernelName:t.jeX,backendName:"webgl",kernelFunc:s}},30619:(e,n,a)=>{a.d(n,{x:()=>i});var t=a(88478),s=a(18378),r=a(29610);class o{constructor(e){this.variableNames=["A"];const n=(0,r.A)(),[a,t]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${a}.0);\n\n        vec4 values = ${n.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class p{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=(0,r.A)(),[a,t]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${t}.0, ${a}.0);\n            vec4 values = ${n.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${n.output} = result;\n      }\n    `}}const i={kernelName:t.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e;let{pixels:i}=n;const{numChannels:l}=r,u="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,h="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[m,b]=u?[i.videoWidth,i.videoHeight]:[i.width,i.height],k=[b,m],f=[b,m,l];if(h||u){const e=(0,t.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=d&&e===c||(c=e,d=document.createElement("canvas").getContext("2d",{willReadFrequently:c})),d.canvas.width=m,d.canvas.height=b,d.drawImage(i,0,0,m,b),i=d.canvas}const g=a.makeTensorInfo(k,"int32");a.texData.get(g.dataId).usage=s.v2.PIXELS,a.gpgpu.uploadPixelDataToTexture(a.getTexture(g.dataId),i);const x=(0,t.OBj)().getBool("WEBGL_PACK")?new p(f):new o(f),N=a.runWebGLProgram(x,[g],"int32");return a.disposeData(g.dataId),N}};let d,c=(0,t.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU")},57650:(e,n,a)=>{a.d(n,{L:()=>d});var t=a(88478),s=a(18954),r=a(92734),o=a(15367),p=a(8328),i=a(24622);const d={kernelName:t._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:d}=e,{x:c,filter:l,bias:u,preluActivationWeights:h}=n,{strides:m,pad:b,dataFormat:k,dilations:f,dimRoundingMode:g,activation:x,leakyreluAlpha:N}=d,I=t.Wap.convertConv2DDataFormat(k),v=t.Wap.computeConv2DInfo(c.shape,l.shape,m,f,b,g,!1,I);let w;const S=[],y=null!=u,W=null!=h,T="leakyrelu"===x,A=()=>{const e=[c,l],n=(e,n)=>{if("NCHW"===n&&1===e.shape.length&&1!==e.shape[0]){const n=(0,i.X)({inputs:{x:e},backend:a,attrs:{shape:[e.shape[0],1,1]}});return S.push(n),n}return e};if(y&&e.push(n(u,k)),W&&e.push(n(h,k)),T){const n=a.makeTensorInfo([],"float32",t.D5U.createScalarValue(N,"float32"));e.push(n),S.push(n)}return e};if(1!==v.filterHeight||1!==v.filterWidth||1!==v.dilationHeight||1!==v.dilationWidth||1!==v.strideHeight||1!==v.strideWidth||"SAME"!==v.padInfo.type&&"VALID"!==v.padInfo.type)if(v.strideWidth<=2&&"channelsLast"===I&&(0,t.OBj)().getBool("WEBGL_EXP_CONV")){const e=x?(0,o.g8)(x,!0):null,n=new r.i(v,y,e,W,T),t=[[v.padInfo.top,v.padInfo.left],[v.strideHeight,v.strideWidth],[v.dilationHeight,v.dilationWidth],[v.inHeight,v.inWidth]],s=A();w=a.runWebGLProgram(n,s,"float32",t)}else if((0,t.OBj)().getBool("WEBGL_CONV_IM2COL"))w=(0,p.Y)({x:c,filter:l,convInfo:v,backend:a,bias:u,activation:x,preluActivationWeights:h,leakyreluAlpha:N});else{const e=x?(0,o.g8)(x,!1):null,n=new s.I(v,y,e,W,T),t=A();w=a.runWebGLProgram(n,t,"float32")}else w=(0,p.n)({x:c,filter:l,convInfo:v,backend:a,bias:u,activation:x,preluActivationWeights:h,leakyreluAlpha:N});const F=(0,i.X)({inputs:{x:w},backend:a,attrs:{shape:v.outShape}});return S.push(w),S.forEach((e=>a.disposeIntermediateTensorInfo(e))),F}}},62812:(e,n,a)=>{a.d(n,{X:()=>p});var t=a(88478),s=a(64364),r=a(31177),o=a(15367);const p={kernelName:t.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:p}=e,{x:i,filter:d,bias:c,preluActivationWeights:l}=n,{strides:u,pad:h,dilations:m,dimRoundingMode:b,activation:k,leakyreluAlpha:f}=p,g=[];let x=m;null==x&&(x=[1,1]),t.D5U.assert(t.Wap.eitherStridesOrDilationsAreOne(u,x),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`));const N=t.Wap.computeConv2DInfo(i.shape,d.shape,u,x,h,b,!0),I=(0,t.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&N.strideWidth<=2&&N.outChannels/N.inChannels==1,v=k?(0,o.g8)(k,I):null,w=[i,d],S=null!=c,y=null!=l,W="leakyrelu"===k;if(S&&w.push(c),y&&w.push(l),W){const e=a.makeTensorInfo([],"float32",t.D5U.createScalarValue(f,"float32"));w.push(e),g.push(e)}let T;T=I?new r.f(N,S,v,y,W):new s.J(N,S,v,y,W);const A=[[N.padInfo.top,N.padInfo.left],[N.strideHeight,N.strideWidth],[N.dilationHeight,N.dilationWidth],[N.inHeight,N.inWidth]],F=a.runWebGLProgram(T,w,"float32",A);return g.forEach((e=>a.disposeIntermediateTensorInfo(e))),F}}},32311:(e,n,a)=>{a.d(n,{o:()=>p});var t=a(88478),s=a(78428),r=a(64272),o=a(24622);const p={kernelName:t.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{params:p,indices:i}=n,d=i.shape,c=d[d.length-1],l=t.D5U.sizeFromShape(p.shape),[u,h,m,b]=t.Wap.prepareAndValidate(p,i),k=(0,o.X)({inputs:{x:i},backend:a,attrs:{shape:[h,c]}}),f=(0,o.X)({inputs:{x:p},backend:a,attrs:{shape:[t.D5U.sizeFromShape(p.shape)/m,m]}});if(a.shouldExecuteOnCPU([p,i])||"string"===p.dtype){const e=a.readSync(i.dataId),n=a.bufferSync(p),t=(0,r.TD)(e,n,p.dtype,h,c,m,b,p.shape,l);return a.makeTensorInfo(u,p.dtype,t.values)}const g=new s.i(c,b,[h,m],p.shape),x=a.runWebGLProgram(g,[f,k],f.dtype),N=(0,o.X)({inputs:{x},backend:a,attrs:{shape:u}});return a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),N}}},77165:(e,n,a)=>{a.d(n,{Z:()=>p,c:()=>i});var t=a(88478),s=a(55795),r=a(64272),o=a(24622);function p(e){const{inputs:n,backend:a,attrs:p}=e,{x:i,indices:d}=n,{axis:c,batchDims:l}=p,u=t.D5U.parseAxisParam(c,i.shape)[0];if((0,t.OBj)().get("DEBUG")){const e=a.readSync(d.dataId),n=i.shape[u];for(let a=0;a<e.length;++a){const s=e[a];t.D5U.assert(s<=n-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${n-1}]`))}}const h=t.Wap.segment_util.collectGatherOpShapeInfo(i,d,u,l),m=t.D5U.sizeFromShape(d.shape),b=[],k=(0,o.X)({inputs:{x:i},backend:a,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=(0,o.X)({inputs:{x:d},backend:a,attrs:{shape:[h.batchSize,m/h.batchSize]}});b.push(k),b.push(f);const g=[h.batchSize,h.outerSize,m/h.batchSize,h.sliceSize];if(a.shouldExecuteOnCPU([i,d])||"string"===i.dtype){const e=a.bufferSync(f),n=a.bufferSync(k),t=(0,r.m$)(n,e,g);return b.forEach((e=>a.disposeIntermediateTensorInfo(e))),a.makeTensorInfo(h.outputShape,t.dtype,t.values)}const x=new s.S(k.shape,g),N=a.runWebGLProgram(x,[k,f],k.dtype);b.push(N);const I=(0,o.X)({inputs:{x:N},backend:a,attrs:{shape:h.outputShape}});return b.forEach((e=>a.disposeIntermediateTensorInfo(e))),I}const i={kernelName:t.qi_,backendName:"webgl",kernelFunc:p}},82661:(e,n,a)=>{a.d(n,{C:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.js)({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:r.B_,dtype:"bool"}),p={kernelName:t.iZT,backendName:"webgl",kernelFunc:o}},54589:(e,n,a)=>{a.d(n,{V:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.js)({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:r.ji}),p={kernelName:t.Acj,backendName:"webgl",kernelFunc:o}},45332:(e,n,a)=>{a.d(n,{K:()=>r});var t=a(88478),s=a(43831);const r={kernelName:t.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{input:t}=n;return(0,s.m)(t,!0,a)}}},18955:(e,n,a)=>{function t(e){const{inputs:n,backend:a}=e,{x:t}=n;return a.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}a.d(n,{I:()=>s,y:()=>t});const s={kernelName:a(88478).iJz,backendName:"webgl",kernelFunc:t}},55145:(e,n,a)=>{a.d(n,{K:()=>o,a:()=>r});var t=a(88478),s=a(18955);function r(e){const{inputs:n,backend:a}=e,{input:t}=n,r=a.texData.get(t.dataId);return(0,s.y)({inputs:{x:r.complexTensorInfos.imag},backend:a})}const o={kernelName:t.J_u,backendName:"webgl",kernelFunc:r}},16529:(e,n,a)=>{a.d(n,{m:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),r={kernelName:t.avt,backendName:"webgl",kernelFunc:s}},21491:(e,n,a)=>{a.d(n,{v:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return float(isinf(x));",dtype:"bool"}),r={kernelName:t.iWB,backendName:"webgl",kernelFunc:s}},6171:(e,n,a)=>{a.d(n,{a:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return float(isnan(x));",dtype:"bool"}),r={kernelName:t.r7n,backendName:"webgl",kernelFunc:s}},47224:(e,n,a)=>{a.d(n,{r:()=>o});var t=a(88478),s=a(7668),r=a(17090);const o={kernelName:t.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a,attrs:o}=e,{x:p}=n,{depthRadius:i,bias:d,alpha:c,beta:l}=o,u=(0,t.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new r.H(p.shape,i,d,c,l):new s.g(p.shape,i,d,c,l);return a.runWebGLProgram(u,[p],p.dtype)}}},74015:(e,n,a)=>{a.d(n,{f:()=>r});var t=a(88478),s=a(13660);const r={kernelName:t.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a,attrs:t}=e,{x:r,y:o,dy:p}=n,{depthRadius:i,bias:d,alpha:c,beta:l}=t,u=new s.s(r.shape,i,d,c,l);return a.runWebGLProgram(u,[r,o,p],r.dtype)}}},1736:(e,n,a)=>{a.d(n,{Ou:()=>i,oA:()=>o,s4:()=>p});var t=a(88478),s=a(84039),r=a(14488);const o="return (a < 0.) ? b * a : a;",p="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",i={kernelName:t.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:i}=e,{x:d}=n,{alpha:c}=i,l=a.makeTensorInfo([],"float32",t.D5U.createScalarValue(c,"float32")),u=(0,t.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new r.E2(p,d.shape,l.shape):new s.t6(o,d.shape,l.shape),h=a.runWebGLProgram(u,[d,l],"float32");return a.disposeIntermediateTensorInfo(l),h}}},28412:(e,n,a)=>{a.d(n,{z:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.js)({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:r.kY,dtype:"bool"}),p={kernelName:t.vtC,backendName:"webgl",kernelFunc:o}},95031:(e,n,a)=>{a.d(n,{m3:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.js)({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:r.Rn,dtype:"bool"}),p={kernelName:t.CAk,backendName:"webgl",kernelFunc:o}},7567:(e,n,a)=>{a.d(n,{j:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:n,attrs:a}=e,{start:t,stop:r,num:o}=a,p=(0,s.PQ)(t,r,o);return n.makeTensorInfo([p.length],"float32",p)}}},28175:(e,n,a)=>{a.d(n,{x:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o=s.E6+"\n  return x < 0.0 ? 0./0. : log(x);\n",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:r.Sd}),i={kernelName:t.ZbH,backendName:"webgl",kernelFunc:p}},88455:(e,n,a)=>{a.d(n,{n:()=>p});var t=a(88478),s=a(15367);const r=s.E6+"\n  return log(1.0 + x);\n",o=(0,s.AJ)({opSnippet:r}),p={kernelName:t.kU,backendName:"webgl",kernelFunc:o}},24042:(e,n,a)=>{a.d(n,{E:()=>r});var t=a(88478);const s=(0,a(15367).js)({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),r={kernelName:t.PYm,backendName:"webgl",kernelFunc:s}},25316:(e,n,a)=>{a.d(n,{E:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return float(!(x >= 1.0));"}),r={kernelName:t.VfG,backendName:"webgl",kernelFunc:s}},56637:(e,n,a)=>{a.d(n,{v:()=>r});var t=a(88478);const s=(0,a(15367).js)({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),r={kernelName:t.MZg,backendName:"webgl",kernelFunc:s}},52489:(e,n,a)=>{a.d(n,{s:()=>i,F:()=>d});var t=a(88478),s=a(64272),r=a(98259),o=a(24622),p=a(39435);function i(e){const{inputs:n,backend:a,attrs:i}=e,{x:d}=n,{reductionIndices:c,keepDims:l}=i,u=d.shape.length,h=t.D5U.parseAxisParam(c,d.shape);let m=h;const b=t.Wap.getAxesPermutation(m,u),k=null!=b,f=a.shouldExecuteOnCPU([d]);let g=d;if(k){if(f){const e=a.texData.get(g.dataId).values,n=new Array(u);for(let e=0;e<n.length;e++)n[e]=d.shape[b[e]];const t=(0,s.Fv)(e,d.shape,d.dtype,b,n);g=a.makeTensorInfo(n,d.dtype),a.texData.get(g.dataId).values=t}else g=(0,p.H)(d,b,a);m=t.Wap.getInnerMostAxes(m.length,u)}t.Wap.assertAxesAreInnerMostDims("max",m,u);const[x,N]=t.Wap.computeOutAndReduceShapes(g.shape,m);let I,v=x;if(l&&(v=t.Wap.expandShapeToKeepDim(x,h)),f){const e=a.texData.get(g.dataId).values,n=(0,s.$O)(e,t.D5U.sizeFromShape(N),v,d.dtype);I=a.makeTensorInfo(v,d.dtype),a.texData.get(I.dataId).values=n}else I=function(e,n,a,s){const p=t.D5U.sizeFromShape(n),i=t.D5U.sizeFromShape(e.shape)/p,d=(0,o.X)({inputs:{x:e},attrs:{shape:[i,p]},backend:s}),c=(0,r.u)(d,e.dtype,"max",s),l=(0,o.X)({inputs:{x:c},attrs:{shape:a},backend:s});return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(c),l}(g,N,v,a);return k&&a.disposeIntermediateTensorInfo(g),I}const d={kernelName:t.YoZ,backendName:"webgl",kernelFunc:i}},22079:(e,n,a)=>{a.d(n,{u:()=>p});var t=a(88478),s=a(90789),r=a(91906),o=a(18955);const p={kernelName:t.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:p}=e,{x:i}=n;(0,r.HS)(i,"maxPool");const{filterSize:d,strides:c,pad:l,dimRoundingMode:u}=p;t.D5U.assert(t.Wap.eitherStridesOrDilationsAreOne(c,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '1'`));const h=t.Wap.computePool2DInfo(i.shape,d,c,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&t.D5U.arraysEqual(h.inShape,h.outShape))return(0,o.y)({inputs:{x:i},backend:a});const m=new s.n(h,"max",!1);return a.runWebGLProgram(m,[i],i.dtype)}}},70883:(e,n,a)=>{a.d(n,{m:()=>r});var t=a(88478),s=a(90789);const r={kernelName:t.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{x:o}=n,{filterSize:p,strides:i,pad:d,dataFormat:c,dimRoundingMode:l}=r,u=t.Wap.computePool3DInfo(o.shape,p,i,[1,1,1],d,l,c),h=new s.I(u,"max",!1);return a.runWebGLProgram(h,[o],o.dtype)}}},49669:(e,n,a)=>{a.d(n,{J:()=>o});var t=a(88478),s=a(82254),r=a(90789);const o={kernelName:t.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{dy:p,input:i}=n,d=i,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=o,m=t.Wap.computePool3DInfo(d.shape,c,l,[1,1,1],u,h),b=new r.I(m,"max",!0),k=a.runWebGLProgram(b,[d],d.dtype),f=new s.b(m),g=a.runWebGLProgram(f,[p,k],d.dtype);return a.disposeIntermediateTensorInfo(k),g}}},59719:(e,n,a)=>{a.d(n,{f:()=>p});var t=a(88478),s=a(82254),r=a(90789),o=a(91906);const p={kernelName:t.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:p}=e,{dy:i,input:d,output:c}=n,l=d;(0,o.HS)([d,c],"maxPoolGrad");const{filterSize:u,strides:h,pad:m,dimRoundingMode:b}=p,k=t.Wap.computePool2DInfo(l.shape,u,h,1,m,b),f=new r.n(k,"max",!0),g=a.runWebGLProgram(f,[l],l.dtype),x=new s.T(k),N=a.runWebGLProgram(x,[i,g],l.dtype);return a.disposeIntermediateTensorInfo(g),N}}},67443:(e,n,a)=>{a.d(n,{q:()=>r});var t=a(88478),s=a(90789);const r={kernelName:t.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:n,backend:a})=>{const{x:r}=e,{filterSize:o,strides:p,pad:i,includeBatchInIndex:d}=n,c=a;t.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];t.D5U.assert(t.Wap.eitherStridesOrDilationsAreOne(p,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${p} and dilations '${l}'`));const u=t.Wap.computePool2DInfo(r.shape,o,p,l,i),[h,m]=function(e,n,a,t){let r=new s.n(a,"max",!1);const o=t.runWebGLProgram(r,[e],"float32");return r=new s.n(a,"max",!0,!0,n),[o,t.runWebGLProgram(r,[e],"float32")]}(r,d,u,c);return[h,m]}}},58391:(e,n,a)=>{a.d(n,{e:()=>l});var t=a(88478),s=a(84039),r=a(14488),o=a(15367),p=a(64272);const i=s.D1+"\n  return max(a, b);\n",d="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+r.my+"\n  return result;\n",c=(0,o.js)({opSnippet:i,packedOpSnippet:d,cpuKernelImpl:p.nL}),l={kernelName:t.BMI,backendName:"webgl",kernelFunc:c}},95452:(e,n,a)=>{a.d(n,{$:()=>i});var t=a(88478),s=a(98259),r=a(24622),o=a(64272),p=a(39435);const i={kernelName:t.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:n,backend:a})=>{const{x:i}=e,{keepDims:d,axis:c}=n,l=a,u=i.shape.length,h=t.D5U.parseAxisParam(c,i.shape);let m=h;const b=t.Wap.getAxesPermutation(m,u),k=null!=b,f=l.shouldExecuteOnCPU([i]),g=[];let x=i;if(k){if(f){const e=l.texData.get(x.dataId).values,n=new Array(u);for(let e=0;e<n.length;e++)n[e]=i.shape[b[e]];const a=(0,o.Fv)(e,i.shape,i.dtype,b,n);x=l.makeTensorInfo(n,i.dtype),l.texData.get(x.dataId).values=a}else x=(0,p.H)(i,b,l);g.push(x),m=t.Wap.getInnerMostAxes(m.length,u)}t.Wap.assertAxesAreInnerMostDims("sum",m,u);const[N,I]=t.Wap.computeOutAndReduceShapes(x.shape,m);let v=N;d&&(v=t.Wap.expandShapeToKeepDim(N,h));const w=function(e,n,a,o){const p=t.D5U.sizeFromShape(n),i=t.D5U.sizeFromShape(e.shape)/p,d=(0,r.X)({inputs:{x:e},attrs:{shape:[i,p]},backend:o}),c=(0,s.u)(d,"float32","mean",o),l=(0,r.X)({inputs:{x:c},attrs:{shape:a},backend:o});return o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(c),l}(x,I,v,l);for(const e of g)l.disposeIntermediateTensorInfo(e);return w}}},75803:(e,n,a)=>{a.d(n,{L:()=>p});var t=a(88478),s=a(98259),r=a(24622),o=a(72207);const p={kernelName:t.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:p}=e,{x:i}=n,{axis:d,keepDims:c}=p,l=i.shape.length,u=t.D5U.parseAxisParam(d,i.shape);let h=u;const m=t.Wap.getAxesPermutation(h,l);let b=i;null!=m&&(b=(0,o.p)({inputs:{x:i},backend:a,attrs:{perm:m}}),h=t.Wap.getInnerMostAxes(h.length,i.shape.length)),t.Wap.assertAxesAreInnerMostDims("min",h,l);const[k,f]=t.Wap.computeOutAndReduceShapes(b.shape,h),g=t.D5U.sizeFromShape(f),x=(0,r.X)({inputs:{x:b},backend:a,attrs:{shape:[-1,g]}}),N=(0,s.u)(x,x.dtype,"min",a);let I;if(c){const e=t.Wap.expandShapeToKeepDim(k,u);I=(0,r.X)({inputs:{x:N},backend:a,attrs:{shape:e}})}else I=(0,r.X)({inputs:{x:N},backend:a,attrs:{shape:k}});return a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(N),null!=m&&a.disposeIntermediateTensorInfo(b),I}}},73631:(e,n,a)=>{a.d(n,{u:()=>l});var t=a(88478),s=a(84039),r=a(14488),o=a(15367),p=a(64272);const i=s.D1+"\n  return min(a, b);\n",d="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+r.my+"\n  return result;\n",c=(0,o.js)({opSnippet:i,packedOpSnippet:d,cpuKernelImpl:p.r}),l={kernelName:t.q8u,backendName:"webgl",kernelFunc:c}},12850:(e,n,a)=>{a.d(n,{t:()=>o});var t=a(88478),s=a(1883),r=a(6300);const o={kernelName:t.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:n,attrs:a})=>{const{x:o}=e,{paddings:p,mode:i}=a,d=(0,t.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r.X(o.shape,p,i):new s.E(o.shape,p,i);return n.runWebGLProgram(d,[o],o.dtype)}}},70326:(e,n,a)=>{a.d(n,{M:()=>i});var t=a(88478),s=a(14488),r=a(15367);const o="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+s.my+"\n  return result;\n",p=(0,r.js)({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:o}),i={kernelName:t.Vbg,backendName:"webgl",kernelFunc:p}},28311:(e,n,a)=>{a.d(n,{A:()=>o});var t=a(88478),s=a(76638),r=a(59486);const o={kernelName:t.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{logits:o}=n,{numSamples:p,seed:i,normalized:d}=t,c=d?o:(0,r.X)({inputs:{logits:o},backend:a,attrs:{dim:o.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new s.A(l,u,p),m=[[i]],b=a.runWebGLProgram(h,[c],"int32",m);return d||a.disposeIntermediateTensorInfo(c),b}}},52038:(e,n,a)=>{a.d(n,{J:()=>c,f:()=>l});var t=a(88478),s=a(21480),r=a(84039),o=a(14488),p=a(64272),i=a(56515);const d="return a * b;";function c(e){const{inputs:n,backend:a}=e,{a:c,b:l}=n,u=t.Wap.upcastType(c.dtype,l.dtype);if("complex64"===c.dtype){const e=a.texData.get(c.dataId),n=a.texData.get(l.dataId),t=new s.S(s.x.REAL,c.shape,l.shape),r=new s.S(s.x.IMAG,c.shape,l.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:c.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:c.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l.shape}],p=a.runWebGLProgram(t,o,"float32"),d=a.runWebGLProgram(r,o,"float32"),u=(0,i.P)({inputs:{real:p,imag:d},backend:a});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),u}if(a.shouldExecuteOnCPU([c,l])){const e=a.texData.get(c.dataId),n=a.texData.get(l.dataId),[t,s]=(0,p.Th)(c.shape,l.shape,e.values,n.values,u),r=a.makeTensorInfo(s,u);return a.texData.get(r.dataId).values=t,r}let h;return h=(0,t.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new o.E2(d,c.shape,l.shape):new r.t6(d,c.shape,l.shape),a.runWebGLProgram(h,[c,l],u)}const l={kernelName:t.wYn,backendName:"webgl",kernelFunc:c}},29870:(e,n,a)=>{a.d(n,{A:()=>i});var t=a(88478),s=a(64272),r=a(84518),o=a(29365);const p=r.D1+"\n  return -x;\n",i={kernelName:t.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{x:i}=n;if(a.shouldExecuteOnCPU([i])){const e=a.texData.get(i.dataId),[n,t]=(0,s.Bo)(e.values,i.shape,i.dtype);return a.makeTensorInfo(t,i.dtype,n)}let d;return d=(0,t.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new o.cc(i.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new r.l(i.shape,p),a.runWebGLProgram(d,[i],i.dtype)}}},96144:(e,n,a)=>{a.d(n,{r:()=>r});var t=a(88478);const s=t.GDt.GP,r={kernelName:t.uv1,backendName:"webgl",kernelFunc:function(e){t.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:a,attrs:r}=e,{boxes:o,scores:p}=n,{maxOutputSize:i,iouThreshold:d,scoreThreshold:c}=r,l=a.readSync(o.dataId),u=a.readSync(p.dataId),{selectedIndices:h}=s(l,u,i,d,c);return a.makeTensorInfo([h.length],"int32",new Int32Array(h))}}},67891:(e,n,a)=>{a.d(n,{L:()=>r});var t=a(88478);const s=t.GDt.qP,r={kernelName:t.cye,backendName:"webgl",kernelFunc:function(e){t.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:a,attrs:r}=e,{boxes:o,scores:p}=n,{maxOutputSize:i,iouThreshold:d,scoreThreshold:c,padToMaxOutputSize:l}=r,u=a.readSync(o.dataId),h=a.readSync(p.dataId),{selectedIndices:m,validOutputs:b}=s(u,h,i,d,c,l);return[a.makeTensorInfo([m.length],"int32",new Int32Array(m)),a.makeTensorInfo([],"int32",new Int32Array([b]))]}}},7463:(e,n,a)=>{a.d(n,{h:()=>r});var t=a(88478);const s=t.GDt.pA,r={kernelName:t.W0H,backendName:"webgl",kernelFunc:function(e){t.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:n,backend:a,attrs:r}=e,{boxes:o,scores:p}=n,{maxOutputSize:i,iouThreshold:d,scoreThreshold:c,softNmsSigma:l}=r,u=a.readSync(o.dataId),h=a.readSync(p.dataId),m=i,b=d,k=c,f=l,{selectedIndices:g,selectedScores:x}=s(u,h,m,b,k,f);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([x.length],"float32",new Float32Array(x))]}}},24299:(e,n,a)=>{a.d(n,{Q:()=>o,n:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.js)({opSnippet:"return float(a != b);",cpuKernelImpl:r.cZ,dtype:"bool"}),p={kernelName:t.yQU,backendName:"webgl",kernelFunc:o}},8363:(e,n,a)=>{a.d(n,{w:()=>o});var t=a(88478),s=a(92711),r=a(24622);const o={kernelName:t.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a,attrs:o}=e,{indices:p}=n,{dtype:i,depth:d,onValue:c,offValue:l}=o,u=t.D5U.sizeFromShape(p.shape),h=new s.s(u,d,c,l),m=(0,r.X)({inputs:{x:p},backend:a,attrs:{shape:[u]}}),b=a.runWebGLProgram(h,[m],i);a.disposeIntermediateTensorInfo(m);const k=[...p.shape,d],f=(0,r.X)({inputs:{x:b},backend:a,attrs:{shape:k}});return a.disposeIntermediateTensorInfo(b),f}}},77019:(e,n,a)=>{a.d(n,{H:()=>d});var t=a(88478),s=a(56515),r=a(13062),o=a(55145),p=a(50852),i=a(27909);const d={kernelName:t.qWM,backendName:"webgl",kernelFunc:function e(n){const{inputs:a,backend:t}=n,{x:d}=a;if("string"===d.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===d.dtype){const n=(0,p.k)({inputs:{input:d},backend:t}),a=e({inputs:{x:n},backend:t}),r=(0,o.a)({inputs:{input:d},backend:t}),c=(0,i.P)({inputs:{x:r},backend:t}),l=(0,s.P)({inputs:{real:a,imag:c},backend:t});return t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(c),l}return(0,r.h)({attrs:{shape:d.shape,dtype:d.dtype,value:1},backend:t})}}},59488:(e,n,a)=>{a.d(n,{W:()=>o});var t=a(88478),s=a(10398),r=a(66623);const o={kernelName:t.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{axis:p}=o;if(1===n.length)return(0,r.d)({inputs:{input:n[0]},backend:a,attrs:{dim:p}});const i=n[0].shape,d=n[0].dtype;n.forEach((e=>{t.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),t.D5U.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=n.map((e=>{const n=(0,r.d)({inputs:{input:e},backend:a,attrs:{dim:p}});return c.push(n),n})),u=(0,s.z)({inputs:l,backend:a,attrs:{axis:p}});return c.forEach((e=>a.disposeIntermediateTensorInfo(e))),u}}},30097:(e,n,a)=>{a.d(n,{S:()=>i,Y:()=>p});var t=a(88478),s=a(1685),r=a(70573),o=a(13062);const p=e=>{const{inputs:n,backend:a,attrs:p}=e,{x:i}=n,{paddings:d,constantValue:c}=p;if(0===t.D5U.sizeFromShape(i.shape)){const e=d.map(((e,n)=>e[0]+i.shape[n]+e[1]));return(0,o.h)({backend:a,attrs:{shape:e,value:c,dtype:i.dtype}})}const l=(0,t.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r.j(i.shape,d,c):new s.O(i.shape,d,c),u=[[c]];return a.runWebGLProgram(l,[i],i.dtype,u)},i={kernelName:t.lyA,backendName:"webgl",kernelFunc:p}},89902:(e,n,a)=>{a.d(n,{z:()=>i});var t=a(88478),s=a(14488),r=a(15367);const o="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+s.my+"\n  return result;\n",p=(0,r.js)({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:o}),i={kernelName:t.pe_,backendName:"webgl",kernelFunc:p}},73525:(e,n,a)=>{a.d(n,{ML:()=>i,VO:()=>p,pU:()=>o});var t=a(88478),s=a(84039),r=a(14488);const o="return (a < 0.) ? b * a : a;",p="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",i={kernelName:t.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{x:i,alpha:d}=n,c=(0,t.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new r.E2(p,i.shape,d.shape):new s.t6(o,i.shape,d.shape);return a.runWebGLProgram(c,[i,d],"float32")}}},2806:(e,n,a)=>{a.d(n,{I:()=>i});var t=a(88478),s=a(98259),r=a(64272),o=a(24622),p=a(72207);const i={kernelName:t.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:i}=e,{x:d}=n,{axis:c,keepDims:l}=i,u=d.shape.length,h=[],m=t.D5U.parseAxisParam(c,d.shape);let b=m;const k=t.Wap.getAxesPermutation(b,u);let f,g=d;if(null!=k&&(g=(0,p.p)({inputs:{x:d},backend:a,attrs:{perm:k}}),b=t.Wap.getInnerMostAxes(b.length,u),h.push(g)),t.Wap.assertAxesAreInnerMostDims("prod",b,u),a.shouldExecuteOnCPU([g])){const e=a.texData.get(g.dataId).values,{outVals:n,outShape:t,outDtype:s}=(0,r.Tg)(g.shape,g.dtype,e,b);f=a.makeTensorInfo(t,s,n)}else{const[e,n]=t.Wap.computeOutAndReduceShapes(g.shape,b),r=t.D5U.sizeFromShape(n),p=(0,o.X)({inputs:{x:g},backend:a,attrs:{shape:[-1,r]}}),i=(0,t.z4k)(d.dtype),c=(0,s.u)(p,i,"prod",a);f=(0,o.X)({inputs:{x:c},backend:a,attrs:{shape:e}}),h.push(p),h.push(c)}if(l){h.push(f);const e=t.Wap.expandShapeToKeepDim(f.shape,m);f=(0,o.X)({inputs:{x:f},backend:a,attrs:{shape:e}})}return h.forEach((e=>a.disposeIntermediateTensorInfo(e))),f}}},18964:(e,n,a)=>{a.d(n,{G:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{paramsNestedSplits:r,paramsDenseValues:o,indices:p}=n,{outputRaggedRank:i}=t,d=r.map((e=>a.readSync(e.dataId))),c=r.map((e=>e.shape)),l=a.readSync(o.dataId),u=a.readSync(p.dataId),[h,m,b]=(0,s.Qs)(d,c,l,o.shape,o.dtype,u,p.shape,i),k=h.map((e=>a.makeTensorInfo([e.length],"int32",e))),f=a.makeTensorInfo(b,o.dtype,m);return k.concat([f])}}},1206:(e,n,a)=>{a.d(n,{N:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.CQl,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{starts:t,limits:r,deltas:o}=n,p=a.readSync(t.dataId),i=a.readSync(r.dataId),d=a.readSync(o.dataId),[c,l]=(0,s.M8)(p,t.shape,t.dtype,i,r.shape,d,o.shape);return[a.makeTensorInfo([c.length],"int32",c),a.makeTensorInfo([l.length],t.dtype,l)]}}},68368:(e,n,a)=>{a.d(n,{P:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{shape:r,values:o,defaultValue:p,rowPartitionTensors:i}=n,{rowPartitionTypes:d}=t,c=a.readSync(r.dataId),l=a.readSync(o.dataId),u=a.readSync(p.dataId),h=i.map((e=>a.readSync(e.dataId))),m=i.map((e=>e.shape)),[b,k]=(0,s.fy)(c,r.shape,l,o.shape,o.dtype,u,p.shape,h,m,d);return a.makeTensorInfo(b,o.dtype,k)}}},35286:(e,n,a)=>{a.d(n,{K:()=>o,w:()=>r});var t=a(88478),s=a(64272);const r=e=>{const{backend:n,attrs:a}=e,{start:t,stop:r,step:o,dtype:p}=a,i=(0,s.hO)(t,r,o,p);return n.makeTensorInfo([i.length],p,i)},o={kernelName:t.e6w,backendName:"webgl",kernelFunc:r}},50852:(e,n,a)=>{a.d(n,{O:()=>o,k:()=>r});var t=a(88478),s=a(18955);function r(e){const{inputs:n,backend:a}=e,{input:t}=n,r=a.texData.get(t.dataId);return(0,s.y)({inputs:{x:r.complexTensorInfos.real},backend:a})}const o={kernelName:t.xJR,backendName:"webgl",kernelFunc:r}},5937:(e,n,a)=>{a.d(n,{k:()=>s,v:()=>r});var t=a(88478);const s=(0,a(15367).js)({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),r={kernelName:t.oHH,backendName:"webgl",kernelFunc:s}},76323:(e,n,a)=>{a.d(n,{a:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return 1.0 / x;"}),r={kernelName:t.$HU,backendName:"webgl",kernelFunc:s}},22593:(e,n,a)=>{a.d(n,{F:()=>p});var t=a(88478),s=a(15367);const r=a(84518).D1+"\n  return (x < 0.0) ? 0.0 : x;\n",o=(0,s.AJ)({opSnippet:r,packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),p={kernelName:t.qkr,backendName:"webgl",kernelFunc:o}},88632:(e,n,a)=>{a.d(n,{N:()=>p});var t=a(88478),s=a(15367);const r=a(84518).D1+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",o=(0,s.AJ)({opSnippet:r,packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),p={kernelName:t.SbG,backendName:"webgl",kernelFunc:o}},24622:(e,n,a)=>{a.d(n,{X:()=>o,b:()=>p});var t=a(88478),s=a(5314),r=a(91906);function o(e){const{inputs:n,backend:a,attrs:o}=e,{x:p}=n,{shape:i}=o,d=a,c=t.D5U.sizeFromShape(p.shape),l=t.D5U.inferFromImplicitShape(i,c),u=t.D5U.sizeFromShape(l);t.D5U.assert(c===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${p.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`));const h=d.texData.get(p.dataId);return!h.isPacked||(0,r.oT)(p.shape,l)||null!==h.texture&&(0,r.oT)(h.shape,l)?(d.incRef(p.dataId),{dataId:p.dataId,shape:l,dtype:p.dtype}):(0,s.V)(p,l,d)}const p={kernelName:t.HZH,backendName:"webgl",kernelFunc:o}},24449:(e,n,a)=>{a.d(n,{T:()=>o});var t=a(88478),s=a(16329),r=a(89721);const o={kernelName:t._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{images:p}=n,{alignCorners:i,halfPixelCenters:d,size:c}=o,[l,u]=c,h=(0,t.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new r.s(p.shape,l,u,i,d):new s.w(p.shape,l,u,i,d);return a.runWebGLProgram(h,[p],"float32")}}},36870:(e,n,a)=>{a.d(n,{G:()=>r});var t=a(88478),s=a(52488);const r={kernelName:t.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{images:r,dy:o}=n,{alignCorners:p}=t,i=new s.A(o.shape,r.shape,p);return a.runWebGLProgram(i,[o],o.dtype)}}},30688:(e,n,a)=>{a.d(n,{G:()=>o});var t=a(88478),s=a(95313),r=a(74874);const o={kernelName:t.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{images:p}=n,{alignCorners:i,halfPixelCenters:d,size:c}=o,[l,u]=c,h=(0,t.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new r.e(p.shape,l,u,i,d):new s.T(p.shape,l,u,i,d);return a.runWebGLProgram(h,[p],p.dtype)}}},22925:(e,n,a)=>{a.d(n,{S:()=>r});var t=a(88478),s=a(37931);const r={kernelName:t.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{images:r,dy:o}=n,{alignCorners:p}=t,i=new s.z(o.shape,r.shape,p);return a.runWebGLProgram(i,[o],o.dtype)}}},93761:(e,n,a)=>{a.d(n,{q:()=>p});var t=a(88478),s=a(42366),r=a(36207),o=a(18955);const p={kernelName:t.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:p}=e,{x:i}=n,{dims:d}=p,c=i.shape.length,l=t.D5U.parseAxisParam(d,i.shape);if(0===c)return(0,o.y)({inputs:{x:i},backend:a});const u=(0,t.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r.L(i.shape,l):new s.X(i.shape,l);return a.runWebGLProgram(u,[i],i.dtype)}}},85703:(e,n,a)=>{a.d(n,{c:()=>r});var t=a(88478),s=a(42740);const r={kernelName:t.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:n,backend:a})=>{const{image:r}=e,{radians:o,fillValue:p,center:i}=n,d=a,c=new s.p(r.shape,p),[l,u]=t.Wap.getImageCenter(i,r.shape[1],r.shape[2]),h=[[l,u,Math.sin(o),Math.cos(o)]];return d.runWebGLProgram(c,[r],r.dtype,h)}}},75262:(e,n,a)=>{a.d(n,{q:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),r={kernelName:t.e07,backendName:"webgl",kernelFunc:s}},10097:(e,n,a)=>{a.d(n,{F:()=>p});var t=a(88478),s=a(15367),r=a(64272);const o=(0,s.AJ)({opSnippet:"return inversesqrt(x);",cpuKernelImpl:r.St}),p={kernelName:t.bV0,backendName:"webgl",kernelFunc:o}},94331:(e,n,a)=>{a.d(n,{b:()=>o});var t=a(88478),s=a(55742),r=a(24622);const o={kernelName:t.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:o}=e,{indices:p,updates:i}=n,{shape:d}=o,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:m}=t.Wap.calculateShapes(i,p,d),b=[m/u,u];if(0===m)return a.makeTensorInfo(d,p.dtype);const k=(0,r.X)({inputs:{x:p},backend:a,attrs:{shape:[l,c]}}),f=(0,r.X)({inputs:{x:i},backend:a,attrs:{shape:[l,u]}}),g=a.makeTensorInfo([],"float32",new Float32Array([0])),x=new s.B(l,c,k.shape.length,f.shape.length,h,b),N=a.runWebGLProgram(x,[f,k,g],f.dtype),I=(0,r.X)({inputs:{x:N},backend:a,attrs:{shape:d}});return a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(g),I}}},49432:(e,n,a)=>{a.d(n,{L:()=>r});var t=a(88478),s=a(16177);const r={kernelName:t.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:t}=e,{sortedSequence:r,values:o}=n,{side:p}=t,i=new s.D(r.shape[0],r.shape[1],o.shape[1],p),d=[[r.shape[1]]];return a.runWebGLProgram(i,[r,o],"int32",d)}}},95833:(e,n,a)=>{a.d(n,{$:()=>r});var t=a(88478),s=a(66887);const r={kernelName:t.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{condition:r,t:o,e:p}=n,i=new s.j(r.shape.length,o.shape,o.shape.length);return a.runWebGLProgram(i,[r,o,p],(0,t.x8V)(o.dtype,p.dtype))}}},39851:(e,n,a)=>{a.d(n,{D:()=>p});var t=a(88478),s=a(15367);const r=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${t.Wap.SELU_SCALEALPHA};\n  float scale = ${t.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,o=(0,s.AJ)({opSnippet:r}),p={kernelName:t.oFR,backendName:"webgl",kernelFunc:o}},53351:(e,n,a)=>{a.d(n,{B:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o=s.E6+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:r.UN}),i={kernelName:t.a5O,backendName:"webgl",kernelFunc:p}},26406:(e,n,a)=>{a.d(n,{l:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),r={kernelName:t.i5y,backendName:"webgl",kernelFunc:s}},40410:(e,n,a)=>{a.d(n,{d:()=>p});var t=a(88478),s=a(15367);const r=s.E6+"\n  return sin(x);\n",o=(0,s.AJ)({opSnippet:r}),p={kernelName:t.RQH,backendName:"webgl",kernelFunc:o}},29333:(e,n,a)=>{a.d(n,{J:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),r={kernelName:t.wYB,backendName:"webgl",kernelFunc:s}},10623:(e,n,a)=>{a.d(n,{C:()=>i,t:()=>p});var t=a(88478),s=a(64272),r=a(95951),o=a(75935);function p(e){const{inputs:n,backend:a,attrs:p}=e,{x:i}=n,{begin:d,size:c}=p,[l,u]=t.kuN.parseSliceParams(i,d,c);if(t.kuN.assertParamsValid(i,l,u),0===t.D5U.sizeFromShape(u))return a.makeTensorInfo(u,i.dtype,[]);if(a.shouldExecuteOnCPU([i])||"string"===i.dtype){const e=a.texData.get(i.dataId),n=(0,s.nT)(e.values,l,u,i.shape,i.dtype);return a.makeTensorInfo(u,i.dtype,n)}const{isPacked:h}=a.texData.get(i.dataId),m=t.kuN.isSliceContinous(i.shape,l,u);if(h||!m){const e=(0,t.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o.T(u):new r.a(u),n=[l];return a.runWebGLProgram(e,[i],i.dtype,n)}return a.uploadToGPU(i.dataId),function(e,n,a,s){const r=s.texData.get(e.dataId),o=s.makeTensorInfo(a,e.dtype),p=s.texData.get(o.dataId);Object.assign(p,r),p.refCount=1,p.shape=a,p.dtype=e.dtype;let i=t.kuN.computeFlatOffset(n,t.D5U.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),p.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const d=s.dataRefCount.get(p.slice.origDataId)||1;return s.dataRefCount.set(p.slice.origDataId,d+1),o}(i,l,u,a)}const i={kernelName:t.p2w,backendName:"webgl",kernelFunc:p}},59486:(e,n,a)=>{a.d(n,{D:()=>l,X:()=>c});var t=a(88478),s=a(43041),r=a(52489),o=a(5937),p=a(24622),i=a(1119),d=a(63255);function c(e){const{inputs:n,backend:a,attrs:c}=e,{logits:l}=n,{dim:u}=c,h=t.D5U.parseAxisParam([u],l.shape),m=(0,r.s)({inputs:{x:l},backend:a,attrs:{reductionIndices:h,keepDims:!1}}),b=t.Wap.expandShapeToKeepDim(m.shape,h),k=(0,p.X)({inputs:{x:m},backend:a,attrs:{shape:b}}),f=(0,i.l)({inputs:{a:l,b:k},backend:a}),g=(0,s.Qq)({inputs:{x:f},backend:a}),x=(0,d.S)({inputs:{x:g},backend:a,attrs:{axis:h,keepDims:!1}}),N=(0,p.X)({inputs:{x},backend:a,attrs:{shape:b}}),I=(0,o.k)({inputs:{a:g,b:N},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(N),I}const l={kernelName:t.Gcp,backendName:"webgl",kernelFunc:c}},37065:(e,n,a)=>{a.d(n,{W:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),r={kernelName:t.MRv,backendName:"webgl",kernelFunc:s}},1232:(e,n,a)=>{a.d(n,{J:()=>p});var t=a(88478),s=a(30097),r=a(24622),o=a(72207);const p={kernelName:t.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:n,backend:a,attrs:p}=e,{x:i}=n,{blockShape:d,paddings:c}=p;t.D5U.assert(i.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=d.reduce(((e,n)=>e*n)),u=[[0,0]];u.push(...c);for(let e=1+d.length;e<i.shape.length;++e)u.push([0,0]);const h=[],m=(0,s.Y)({inputs:{x:i},backend:a,attrs:{paddings:u,constantValue:0}}),b=t.Wap.getReshaped(m.shape,d,l,!1),k=t.Wap.getPermuted(b.length,d.length,!1),f=t.Wap.getReshapedPermuted(m.shape,d,l,!1),g=(0,r.X)({inputs:{x:m},backend:a,attrs:{shape:b}}),x=(0,o.p)({inputs:{x:g},backend:a,attrs:{perm:k}}),N=(0,r.X)({inputs:{x},backend:a,attrs:{shape:f}});return h.push(m),h.push(g),h.push(x),h.forEach((e=>a.disposeIntermediateTensorInfo(e))),N}}},64765:(e,n,a)=>{a.d(n,{l:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{indices:t,values:r,denseShape:o,defaultValue:p}=n;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${o.shape}`);if(2!==t.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${t.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==p.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${p.shape}`);const i=a.readSync(t.dataId),d=a.readSync(r.dataId),c=a.readSync(o.dataId),l=a.readSync(p.dataId)[0],[u,h,m,b,k]=(0,s.X8)(i,t.shape,t.dtype,d,r.dtype,c,l);return[a.makeTensorInfo(h,t.dtype,u),a.makeTensorInfo([h[0]],r.dtype,m),a.makeTensorInfo([b.length],"bool",new Uint8Array(b.map((e=>Number(e))))),a.makeTensorInfo([k.length],t.dtype,new Int32Array(k))]}}},61790:(e,n,a)=>{a.d(n,{d:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{inputIndices:t,inputShape:r,newShape:o}=n;if(2!==t.shape.length)throw new Error(`Input indices should be a matrix but received shape ${t.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const p=Array.from(a.readSync(r.dataId)),i=a.readSync(t.dataId),d=Array.from(a.readSync(o.dataId)),[c,l,u]=(0,s.LS)(i,t.shape,t.dtype,p,d);return[a.makeTensorInfo(l,t.dtype,c),a.makeTensorInfo([u.length],o.dtype,new Int32Array(u))]}}},93746:(e,n,a)=>{a.d(n,{A:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{data:t,indices:r,segmentIds:o}=n;if(t.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const p=a.readSync(t.dataId),i=a.readSync(r.dataId),d=a.readSync(o.dataId),[c,l]=(0,s.AR)(p,t.shape,t.dtype,i,d,!0);return a.makeTensorInfo(l,t.dtype,c)}}},4389:(e,n,a)=>{a.d(n,{O:()=>r});var t=a(88478),s=a(64272);const r={kernelName:t.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a}=e,{data:t,indices:r,segmentIds:o}=n;if(t.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const p=a.readSync(t.dataId),i=a.readSync(r.dataId),d=a.readSync(o.dataId),[c,l]=(0,s.AR)(p,t.shape,t.dtype,i,d);return a.makeTensorInfo(l,t.dtype,c)}}},34197:(e,n,a)=>{a.d(n,{e:()=>p});var t=a(88478),s=a(64272),r=a(55742),o=a(24622);const p={kernelName:t.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:p}=e,{sparseIndices:i,sparseValues:d,defaultValue:c}=n,{outputShape:l}=p,{sliceRank:u,numUpdates:h,sliceSize:m,strides:b,outputSize:k}=t.Wap.calculateShapes(d,i,l);if("string"===d.dtype){const e=a.bufferSync(i),n=a.bufferSync(d),r=t.D5U.decodeString(a.readSync(c.dataId)[0]),o=(0,s.Y1)(e,n,l,k,m,h,u,b,r,!1);return a.makeTensorInfo(l,o.dtype,o.values)}const f=new r.B(h,u,i.shape.length,d.shape.length,b,[k,1],!1),g=a.runWebGLProgram(f,[d,i,c],d.dtype),x=(0,o.X)({inputs:{x:g},backend:a,attrs:{shape:l}});return a.disposeIntermediateTensorInfo(g),x}}},55808:(e,n,a)=>{a.d(n,{q:()=>r});var t=a(88478),s=a(10623);const r={kernelName:t.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:n,backend:a,attrs:r}=e,{x:o}=n,{numOrSizeSplits:p,axis:i}=r,d=t.D5U.parseAxisParam(i,o.shape)[0],c=t.Wap.prepareSplitSize(o,p,d),l=o.shape.length,u=new Array(l).fill(0),h=o.shape.slice();return c.map((e=>{const n=[...h];n[d]=e;const t=(0,s.t)({inputs:{x:o},backend:a,attrs:{begin:u,size:n}});return u[d]+=e,t}))}}},67087:(e,n,a)=>{a.d(n,{c:()=>i});var t=a(88478),s=a(15367),r=a(64272);const o="return sqrt(x);",p=(0,s.AJ)({opSnippet:o,packedOpSnippet:o,cpuKernelImpl:r.Bk}),i={kernelName:t.FKq,backendName:"webgl",kernelFunc:p}},34520:(e,n,a)=>{a.d(n,{g:()=>r});var t=a(88478);const s=(0,a(15367).AJ)({opSnippet:"return x * x;"}),r={kernelName:t.bK0,backendName:"webgl",kernelFunc:s}},15245:(e,n,a)=>{a.d(n,{M:()=>o});var t=a(88478);const s="return (a - b) * (a - b);",r=(0,a(15367).js)({opSnippet:s,packedOpSnippet:s}),o={kernelName:t._tC,backendName:"webgl",kernelFunc:r}}}]);